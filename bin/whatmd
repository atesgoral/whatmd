#!/usr/bin/env node

var program  = require("commander"),
    fs = require("fs");

program
    .version("0.0.0")
    .usage("[filename]")
    .parse(process.argv);

var filename = program.args.shift();

if (filename) {
	var moduleSrc = fs.readFileSync(filename);

	function probeTmpl() {
		/*splitmarker*/
		var module = { exports: {} },
			window = {},
			scope = {}, // @todo obfuscate name
			findings = {}; // @todo obfuscate name

		function define() {
			// arguments
		}

		// call it once with amd, once without
		//define.amd = true;

		function require() {
			// arguments
		}

		// todo probe multiple times with different environments
		// function probeNode(), probeBrowser() etc.?

		try {
			(function (define, require, module, window, arguments, scope, findings) {
				/*splitmarker*/
			}).call(scope, define, require, module, window, []);
		} catch (e) {
			findings.exceptionThrown = e;
		}

		return findings;
		/*splitmarker*/
	}

	moduleSrc = 'foo = 42;';

	var parts = probeTmpl
		.toString()
		.split('/*splitmarker*/')
		.slice(1, 3);

	parts.splice(1, 0, moduleSrc);

	var probe = new Function(parts.join('\n'));

	var globalPropsBefore = Object.keys(global);

	var findings = probe();

	var globalPropsAfter = Object.keys(global);

	findings.globalPropsAdded = globalPropsAfter.filter(function (key) {
		return globalPropsBefore.indexOf(key) === -1;
	});

	console.log(findings);
}